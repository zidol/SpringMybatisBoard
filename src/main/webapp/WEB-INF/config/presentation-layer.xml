<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- 1. xml 방법 -->
	
	<!-- Handler Mapping 등록 -->
	<!-- <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="mappings">
			<props>
				<prop key="/login.do">login</prop>
				<prop key="/getBoardList.do">getBoardList</prop>
				<prop key="/getBoard.do">getBoard</prop>
				<prop key="/insertBoard.do">insertBoard</prop>
				<prop key="/updateBoard.do">updateBoard</prop>
				<prop key="/deleteBoard.do">deleteBoard</prop>
				<prop key="/logout.do">logout</prop>
			</props>
		</property>
	</bean> -->
	
	<!-- Controller 등록 -->
	<!-- <bean id="login" class="com.springbook.view.user.LoginController"/>
	<bean id="getBoardList" class="com.springbook.view.board.GetBoardListController"/>
	<bean id="getBoard" class="com.springbook.view.board.GetBoardController"/>
	<bean id="insertBoard" class="com.springbook.view.board.InsertBoardController"/>
	<bean id="updateBoard" class="com.springbook.view.board.UpdateBoardController"/>
	<bean id="deleteBoard" class="com.springbook.view.board.DeleteBoardController"/>
	<bean id="logout" class="com.springbook.view.user.LogoutController"/> -->
	
	<!-- ViewResolver 등록 -->
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 2. 어노테이션 기반 설정 -->
	<context:component-scan base-package="com.springbook"></context:component-scan>
	<context:component-scan base-package="com.swp"></context:component-scan>
	
	<!-- 파일 업로드 설정 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1000000" />
	</bean>
	
	<!-- 예외 처리 설정 : ControlleAdvice, ExceptionHandler -->
	<!-- 어노테이션 기반 설정 -->
	<mvc:annotation-driven />
	
	<!-- xml 기반 예외처리 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.ArithmeticException">
					common/arithmeticError
				</prop>
				
				<prop key="java.lang.NullPoinerException">
					common/nullPointerError
				</prop>
			</props>
		</property>
		<property name="defaultErrorView" value="common/error"></property>
	</bean>
	
	<!-- 다국어 설정 -->
	<!--  MessageSoruce 등록 -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>message.messageSource</value>
			</list>
		</property>
	</bean>
	
	<!-- LocaleResolver 등록 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"></bean>
	
	<!-- LocaleChangeInerceptor 등록 -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang"></property>
		</bean>
	</mvc:interceptors>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/bower_components/**" location="/resources/bower_components/"/>
	<mvc:resources mapping="/plugins/**" location="/resources/plugins/"/>
	<mvc:resources mapping="/dist/**" location="/resources/dist/"/>
	
	  <!-- oauth2 login -->
	  <!-- naver -->
	<bean id="naverClientID" class="java.lang.String">
	   <constructor-arg value="NR4HQdHjBXS5ud9g_ZFk" />
    </bean>
	<bean id="naverClientSecret" class="java.lang.String">
		<constructor-arg value="zocmbKA0Fz" />
	</bean>
	<bean id="naverRedirectUrl" class="java.lang.String">
		<constructor-arg value="http://localhost:8090/auth/naver/callback" />
	</bean>

	<bean id="naverSns" class="com.jade.swp.auth.SnsValue">
		<constructor-arg value="naver" />
		<constructor-arg ref="naverClientID" />
		<constructor-arg ref="naverClientSecret" />
		<constructor-arg ref="naverRedirectUrl" />
	</bean>
	<!-- Google -->
	<bean id="googleClientID" class="java.lang.String">
	   <constructor-arg value="832462011042-612kpdahms3qesibjr313978828a6ba2.apps.googleusercontent.com" />
    </bean>
	<bean id="googleClientSecret" class="java.lang.String">
		<constructor-arg value="3lEKDUjUe7VC67okjJf4Fnil" />
	</bean>
	<bean id="googleRedirectUrl" class="java.lang.String">
		<constructor-arg value="http://localhost:8090/auth/google/callback" />
	</bean>

	<bean id="googleSns" class="com.jade.swp.auth.SnsValue">
		<constructor-arg value="google" />
		<constructor-arg ref="googleClientID" />
		<constructor-arg ref="googleClientSecret" />
		<constructor-arg ref="googleRedirectUrl" />
	</bean>
	
	<bean id="googleConnectionFactory"
	           class="org.springframework.social.google.connect.GoogleConnectionFactory">
	   <constructor-arg ref="googleClientID" />
	   <constructor-arg ref="googleClientSecret" />
    </bean>

	<bean id="googleOAuth2Parameters"
		class="org.springframework.social.oauth2.OAuth2Parameters"><!-- 
		<property name="scope" value="https://www.googleapis.com/auth/plus.login" /> -->
		<!-- <property name="scope" value="https://www.googleapis.com/auth/plus.login" 
			/> -->
		<property name="scope" value="https://www.googleapis.com/auth/userinfo.email" />
		<property name="redirectUri" ref="googleRedirectUrl" />
	</bean>
	
	<!-- Facebook -->
	<bean id="facebookClientID" class="java.lang.String">
	   <constructor-arg value="339369890070694" />
    </bean>
	<bean id="facebookClientSecret" class="java.lang.String">
		<constructor-arg value="615aabc37188b38132764c721456f5b7" />
	</bean>
	<bean id="facebookRedirectUrl" class="java.lang.String">
		<constructor-arg value="http://localhost:8090/auth/facebook/callback" />
	</bean>

	<bean id="facebookSns" class="com.jade.swp.auth.SnsValue">
		<constructor-arg value="facebook" />
		<constructor-arg ref="facebookClientID" />
		<constructor-arg ref="facebookClientSecret" />
		<constructor-arg ref="facebookRedirectUrl" />
	</bean>
	
	<bean id="facebookConnectionFactory"
	           class="org.springframework.social.facebook.connect.FacebookConnectionFactory">
	   <constructor-arg ref="facebookClientID" />
	   <constructor-arg ref="facebookClientSecret" />
    </bean>

	<bean id="facebookOAuth2Parameters"
		class="org.springframework.social.oauth2.OAuth2Parameters">
		<property name="scope" value="email" />
		<!-- <property name="scope" value="https://www.googleapis.com/auth/plus.login" 
			/> -->
		<!-- <property name="scope" value="https://www.googleapis.com/auth/userinfo.email" /> -->
		<property name="redirectUri" ref="facebookRedirectUrl" />
	</bean>
</beans>

